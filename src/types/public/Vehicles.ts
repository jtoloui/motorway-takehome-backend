// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { z } from 'zod';

/** Identifier type for public.vehicles */
export type VehiclesId = number & { __brand: 'VehiclesId' };

/** Represents the table public.vehicles */
export default interface Vehicles {
  id: VehiclesId;

  make: string;

  model: string;

  state: string;
}

/** Represents the initializer for the table public.vehicles */
export interface VehiclesInitializer {
  id: VehiclesId;

  make: string;

  model: string;

  state: string;
}

/** Represents the mutator for the table public.vehicles */
export interface VehiclesMutator {
  id?: VehiclesId;

  make?: string;

  model?: string;

  state?: string;
}

export const vehiclesId = z.number() as unknown as z.Schema<VehiclesId>;

export const vehicles = z.object({
  id: vehiclesId,
  make: z.string(),
  model: z.string(),
  state: z.string(),
}) as unknown as z.Schema<Vehicles>;

export const vehiclesInitializer = z.object({
  id: vehiclesId,
  make: z.string(),
  model: z.string(),
  state: z.string(),
}) as unknown as z.Schema<VehiclesInitializer>;

export const vehiclesMutator = z.object({
  id: vehiclesId.optional(),
  make: z.string().optional(),
  model: z.string().optional(),
  state: z.string().optional(),
}) as unknown as z.Schema<VehiclesMutator>;
