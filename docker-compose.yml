version: '3.8'

name: motorway-test-backend
services:
  db:
    networks:
      - backend
    image: motorway-test-backend
    container_name: motorway-test-backend
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: motorway-test-backend
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=motorway
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
  db_test:
    image: motorway-test-backend
    container_name: motorway-test-backend_test
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: motorway-test-backend
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=motorway_test
    ports:
      - 5433:5432
  app:
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - backend
    depends_on:
      - db
      - memcached
      - jaeger
      - otel-collector
    build:
      context: .
      dockerfile: ./docker/Dockerfile.server
    # ports:
    #   - '4001:4001'
    environment:
      - PORT=4001
      - DB_HOST=db
      - MEMCACHE_SERVERS=memcached:11211
      - OTEL_TRACE_EXPORTER_URL=http://otel-collector:4318/v1/traces
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
  jaeger:
    networks:
      - backend
    image: jaegertracing/all-in-one:1.57
    container_name: jaeger
    ports:
      - '16686:16686'
      - '14268:14268'
  otel-collector:
    networks:
      - backend
    depends_on:
      - jaeger
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    ports:
      - '4317:4317' # gRPC receiver
      - '4318:4318' # HTTP receiver
    volumes:
      - ./docker/otel-collector-config.yml:/etc/otel-collector-config.yml
    command: ['--config=/etc/otel-collector-config.yml']

  memcached:
    image: bitnami/memcached
    container_name: memcached
    ports:
      - 11211:11211
    networks:
      - backend
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - '4001:80'
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge
